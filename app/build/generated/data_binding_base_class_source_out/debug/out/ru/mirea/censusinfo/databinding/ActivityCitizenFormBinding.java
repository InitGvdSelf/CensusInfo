// Generated by view binder compiler. Do not edit!
package ru.mirea.censusinfo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.mirea.censusinfo.R;

public final class ActivityCitizenFormBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final Button btnAddChild;

  @NonNull
  public final Button btnApprove;

  @NonNull
  public final Button btnSave;

  @NonNull
  public final LinearLayout containerChildren;

  @NonNull
  public final TextInputEditText emailInput;

  @NonNull
  public final TextInputEditText etAddress;

  @NonNull
  public final TextInputEditText etAge;

  @NonNull
  public final TextInputEditText etFullName;

  @NonNull
  public final TextInputEditText etSpouse;

  @NonNull
  public final ProgressBar pbSave;

  @NonNull
  public final RadioButton rbFemale;

  @NonNull
  public final RadioButton rbMale;

  @NonNull
  public final RadioGroup rgGender;

  @NonNull
  public final Spinner spMarital;

  @NonNull
  public final SwitchCompat swChildren;

  @NonNull
  public final TextInputLayout tilEmail;

  @NonNull
  public final TextInputLayout tilSpouse;

  @NonNull
  public final MaterialToolbar toolbar;

  private ActivityCitizenFormBinding(@NonNull CoordinatorLayout rootView,
      @NonNull Button btnAddChild, @NonNull Button btnApprove, @NonNull Button btnSave,
      @NonNull LinearLayout containerChildren, @NonNull TextInputEditText emailInput,
      @NonNull TextInputEditText etAddress, @NonNull TextInputEditText etAge,
      @NonNull TextInputEditText etFullName, @NonNull TextInputEditText etSpouse,
      @NonNull ProgressBar pbSave, @NonNull RadioButton rbFemale, @NonNull RadioButton rbMale,
      @NonNull RadioGroup rgGender, @NonNull Spinner spMarital, @NonNull SwitchCompat swChildren,
      @NonNull TextInputLayout tilEmail, @NonNull TextInputLayout tilSpouse,
      @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.btnAddChild = btnAddChild;
    this.btnApprove = btnApprove;
    this.btnSave = btnSave;
    this.containerChildren = containerChildren;
    this.emailInput = emailInput;
    this.etAddress = etAddress;
    this.etAge = etAge;
    this.etFullName = etFullName;
    this.etSpouse = etSpouse;
    this.pbSave = pbSave;
    this.rbFemale = rbFemale;
    this.rbMale = rbMale;
    this.rgGender = rgGender;
    this.spMarital = spMarital;
    this.swChildren = swChildren;
    this.tilEmail = tilEmail;
    this.tilSpouse = tilSpouse;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCitizenFormBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCitizenFormBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_citizen_form, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCitizenFormBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAddChild;
      Button btnAddChild = ViewBindings.findChildViewById(rootView, id);
      if (btnAddChild == null) {
        break missingId;
      }

      id = R.id.btnApprove;
      Button btnApprove = ViewBindings.findChildViewById(rootView, id);
      if (btnApprove == null) {
        break missingId;
      }

      id = R.id.btnSave;
      Button btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.containerChildren;
      LinearLayout containerChildren = ViewBindings.findChildViewById(rootView, id);
      if (containerChildren == null) {
        break missingId;
      }

      id = R.id.email_input;
      TextInputEditText emailInput = ViewBindings.findChildViewById(rootView, id);
      if (emailInput == null) {
        break missingId;
      }

      id = R.id.etAddress;
      TextInputEditText etAddress = ViewBindings.findChildViewById(rootView, id);
      if (etAddress == null) {
        break missingId;
      }

      id = R.id.etAge;
      TextInputEditText etAge = ViewBindings.findChildViewById(rootView, id);
      if (etAge == null) {
        break missingId;
      }

      id = R.id.etFullName;
      TextInputEditText etFullName = ViewBindings.findChildViewById(rootView, id);
      if (etFullName == null) {
        break missingId;
      }

      id = R.id.etSpouse;
      TextInputEditText etSpouse = ViewBindings.findChildViewById(rootView, id);
      if (etSpouse == null) {
        break missingId;
      }

      id = R.id.pbSave;
      ProgressBar pbSave = ViewBindings.findChildViewById(rootView, id);
      if (pbSave == null) {
        break missingId;
      }

      id = R.id.rbFemale;
      RadioButton rbFemale = ViewBindings.findChildViewById(rootView, id);
      if (rbFemale == null) {
        break missingId;
      }

      id = R.id.rbMale;
      RadioButton rbMale = ViewBindings.findChildViewById(rootView, id);
      if (rbMale == null) {
        break missingId;
      }

      id = R.id.rgGender;
      RadioGroup rgGender = ViewBindings.findChildViewById(rootView, id);
      if (rgGender == null) {
        break missingId;
      }

      id = R.id.spMarital;
      Spinner spMarital = ViewBindings.findChildViewById(rootView, id);
      if (spMarital == null) {
        break missingId;
      }

      id = R.id.swChildren;
      SwitchCompat swChildren = ViewBindings.findChildViewById(rootView, id);
      if (swChildren == null) {
        break missingId;
      }

      id = R.id.tilEmail;
      TextInputLayout tilEmail = ViewBindings.findChildViewById(rootView, id);
      if (tilEmail == null) {
        break missingId;
      }

      id = R.id.tilSpouse;
      TextInputLayout tilSpouse = ViewBindings.findChildViewById(rootView, id);
      if (tilSpouse == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityCitizenFormBinding((CoordinatorLayout) rootView, btnAddChild, btnApprove,
          btnSave, containerChildren, emailInput, etAddress, etAge, etFullName, etSpouse, pbSave,
          rbFemale, rbMale, rgGender, spMarital, swChildren, tilEmail, tilSpouse, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
